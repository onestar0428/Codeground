#include <stdio.h>
#include <stdlib.h>

int main(void) {
	/* 아래 freopen 함수는 input.txt를 read only 형식으로 열고, 표준입력(키보드) 대신 input.txt 로 부터 읽어오겠다는 의미의 코드입니다.
	만약 본인 PC 에서 테스트 할 때는, 입력값을 input.txt에 저장한 후 freopen 함수를 사용하면
	그 아래에서 scanf 함수를 사용하여 표준입력 대신 input.txt 파일로 부터 입력값을 읽어 올 수 있습니다.
	또한, 본인 PC에서 freopen 함수를 사용하지 않고 표준입력을 사용하여 테스트하셔도 무방합니다.
	단, Codeground 시스템에서 "제출하기" 할 때에는 반드시 freopen 함수를 지우거나 주석(//) 처리 하셔야만 합니다. */
	//freopen("sample_input.txt", "r", stdin);

	/* setbuf 함수를 사용하지 않으면, 본인의 프로그램이 제한 '시간 초과'로 강제 종료 되었을 때,
	printf로 출력한 내용이 채점되지 않고 '0점'이 될 수도 있습니다.
	시간 초과 전까지 실행된 결과 점수를 받고자 하신다면 "setbuf(stdout, NULL);" 를 사용하시기 바랍니다. */
	setbuf(stdout, NULL);

	int T;
	int test_case;

	scanf("%d", &T);
	for (test_case = 1; test_case <= T; test_case++) {
		int K, L, N, M;
		int i, j, k, r, n;
		int min = 10000000;
		int arr[100][100] = { 0, };
		int temp[100][100] = { 0, };
		int sum[100] = { 0, };
		int result = 0;

		// 이 부분에서 알고리즘 프로그램을 작성하십시오. 기본 제공된 코드를 수정 또는 삭제하고 본인이 코드를 사용하셔도 됩니다.
		scanf("%d %d", &K, &L);
		scanf("%d %d", &n, &M);

		for (i = 0; i < M; i++) {
			int x, y;
			scanf("%d %d", &x, &y);
			arr[x - 1][y - 1] = arr[y - 1][x - 1] = 1;
			temp[x - 1][y - 1] = temp[y - 1][x - 1] = 1;
		}

		for (i = 0; i < n; i++) {
			result = 0;
			N = n;
			for (k = 0; k < n; k++) {
				for (j = 0; j < n; j++) {
					arr[k][j] = temp[k][j];
				}
			}

			for (k = i; k < n + i - L; k++) {
				r = k;
				if (k >= n)
					r = k - n;

				for (j = 0; j < n; j++) {
					sum[r] += arr[r][j];
				}

				if ((sum[r] > N - L - 1 && sum[r] < N) || sum[r] < K) {
					result += r + 1;
					N--;
					for (j = 0; j < n; j++) {
						arr[j][r] = 0;
					}
				}
				sum[r] = 0;
			}
			for (k = n + i - L; k < n + i; k++) {
				r = k;
				if (k >= n)
					r = k - n;

				for (j = 0; j < n; j++) {
					sum[r] += arr[r][j];
				}

				if ((sum[r] > N - L - 1 && sum[r] < N) || sum[r] < K) {
					result = 10000000;
				}
				sum[r] = 0;
			}
			//printf("result = %d\n ", result);
			if (min > result) {
				min = result;
			}
		}

		// 이 부분에서 정답을 출력하십시오.
		printf("Case #%d\n", test_case);
		if (min == 10000000) {
			min = 0;
			for (i = 1; i < n+1; i++)
				min += i;
		}
		printf("%d\n", min);
	}

	return 0;	// 정상종료 시 반드시 0을 리턴해야 합니다.
}